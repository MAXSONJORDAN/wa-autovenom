openapi: 3.0.0
info:
  title: API WA-AUTOVENOM
  version: 1.0.8
  description: API de utilização da automatização de whatsapp.

paths:
  /api/webhook:
    get:
      description: A fake webhook to print what is received<p>This is util only in console mode.</p>
      responses:
        "200":
          description: ok
      tags:
        - "Utils"
  /api/sendText:
    post:
      tags:
        - "Sender"
      description: >-
        Sender a WhatsApp message with the specified content to the specified
        phone number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                args:
                  type: object
                  properties:
                    to:
                      type: string
                      example: 0000000000000@c.us or 00000000000-111111111@g.us
                    content:
                      type: string
                  required:
                    - to
                    - content
      responses:
        "200":
          description: >-
            Returns an object indicating the success of the message sending
            operation.
        "404":
          description: >-
            Returns an object indicating the fail of the message sending
            operation.
  /api/sendFile:
    post:
      tags:
        - "Sender"
      description: Sender a file as a WhatsApp message to the specified phone number.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                args:
                  type: object
                  properties:
                    to:
                      type: string
                      example: 0000000000000@c.us or 00000000000-111111111@g.us
                    filename:
                      type: string
                      example: file.pdf
                    file:
                      type: string
                      example: base64 or url
                  required:
                    - to
                    - filename
                    - file
      responses:
        "200":
          description: >-
            Returns an object indicating the success of the message sending
            operation.
        "400":
          description: >-
            Bad Request - Parameters required were not sent. Please verify if
            all mandatory parameters were included in the request body.
  /api/sendMenuList:
    description: Sender menu list
    post:
      summary: Send List menu
      description: Send a list message menu!. <p>This will not work when being sent from or to business accounts!</p>
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                {
                  args:
                    {
                      to: 0000000000000@c.us or 00000000000-111111111@g.us,
                      title: Main menu,
                      description: Select to what you need help on the menu,
                      buttonText: Menu list,
                      menu:
                        [
                          {
                            title: "Section 1",
                            rows:
                              [
                                {
                                  rowId: "1",
                                  title: "Element 1",
                                  description: "Description 1",
                                },
                                {
                                  rowId: "2",
                                  title: "Element 2",
                                  description: "Description 2",
                                },
                              ],
                          },
                          {
                            title: "Section 2",
                            rows:
                              [
                                {
                                  rowId: "3",
                                  title: "Element 3",
                                  description: "Description 3",
                                },
                                {
                                  rowId: "4",
                                  title: "Element 4",
                                  description: "Description 4",
                                },
                              ],
                          },
                        ],
                    },
                }
      operationId: ""
      responses:
        default:
          description: Default error sample response
      tags: ["Sender"]
  /api/sendButtons:
    post:
      tags:
        - "Sender"
      description: "Send Messages with Buttons Reply. <p>Remember, the limit is 3 buttons.</p>"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                {
                  args:
                    {
                      to: 0000000000000@c.us or 00000000000-111111111@g.us,
                      title: Customer Satisfaction Survey,
                      buttons:
                        [
                          { identifier: "yes", text: "Yes" },
                          { identifier: "no", text: "No" },
                        ],
                      description: Have we helped you with your needs?,
                    },
                }
      responses:
        "200":
          description: OK
  /api/wa/{functionName}:
    post:
      parameters:
        - in: path
          name: functionName
          required: true
          schema:
            type: string
            description: Name of the fuction that you needs.
        
      tags:
        - "Utils"
      description: "Here, you can find all the available methods that can be used within this library.<p>You can view the complete list on the oficial <a href='https://docs.orkestral.io/venom/#/?id=basic-functions'>documentation</a></p>"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                {
                  args: "Objeto de argumentos visto na documentação do venombot.",
                }
      responses:
        "200":
          description: OK
  /api/decryptMedia:
    post:
      description: "Decrypts a media message.<br>
        Parameter: message This can be the serialized [[MessageId]] or the whole [[Messag] object. It is advised to just use the serialized message ID<br>
        @returns Promise<[[DataURL]]><br>"
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                { args: { "message": "Check documentation in description" } }

      responses:
        "200":
          description: OK
      tags:
        - "Media"

components: {}
tags: []
